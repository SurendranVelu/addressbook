pipeline {
    agent any
    tools{
        jdk 'myjava'
        maven 'mymaven'
    }
    parameters{
        string(name:'Env', defaultValue: 'Test',description: "version to deploy")
        booleanParam(name:'executeTests', defaultValue: true, description: 'decide to run tc')
        choice(name:'APPVERSION',choices:['1.1','1.2','1.3','1.4'])    }

    environment{
        BUILD_SERVER_IP ='ec2-user@172.31.34.68'
        DEPLOY_SERVER_IP = 'ec2-user@172.31.40.185'
        IMAGE_NAME = 'surendran0505/java-mvn-privaterepo'
    }
    stages {
        stage('Compile') {
            steps {
                echo 'Compiling the code'
                echo "Compiling the code ${params.Env}"
                sh 'mvn compile'
            }
        }
        stage('Unit Test') {
            when{
                expression{
                    params.executeTests == true
                }
            }
            steps {
                echo 'Testing the code'
                sh 'mvn test'
            }
            post{
                always{
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('docker_build') {
            //agent {
            //    label 'linux_slave'
            //}
            agent any
            steps{
                script{
                    sshagent(['build-server']) {
                        withCredentials([usernamePassword(credentialsId:'docker_hub',passwordVariable: 'PASSWORD',usernameVariable: 'USERNAME')]){
                        echo 'Packaging the code'
                        sh "scp -o StrictHostKeyChecking=no server-config.sh  ${BUILD_SERVER_IP}:/home/ec2-user"
                        sh "ssh -o StrictHostKeyChecking=no ${BUILD_SERVER_IP} 'bash ~/server-config.sh ${IMAGE_NAME} ${BUILD_NUMBER}'"
                        sh "ssh ${BUILD_SERVER_IP} sudo docker login -u ${USERNAME} -p ${PASSWORD}"
                        sh "ssh ${BUILD_SERVER_IP} sudo docker push image"
                        }
                    }
                }
            }
            
        }
        stage('docker_build') {
            //agent {
            //    label 'linux_slave'
            //}
            agent any
            input{
                message "Select the version"
                ok "version selected"
                parameters{
                    choice(name:'NewApp', choices:['1.1','1.2','1.3'])
                }
            }
            steps{
                script{
                    sshagent(['build-server']) {
                        withCredentials([usernamePassword(credentialsId:'docker_hub',passwordVariable: 'PASSWORD',usernameVariable: 'USERNAME')]){
                        sh "ssh -o StrictHostKeyChecking=no ${DEPLOY_SERVER_IP} suod yum install docker -y"
                        sh "ssh ${DEPLOY_SERVER_IP} sudo systemctl start docker"
                        sh "ssh ${DEPLOY_SERVER_IP} sudo docker login -u ${USERNAME} -p ${PASSWORD}"
                        sh "ssh ${DEPLOY_SERVER_IP} sudo docker run -itd -P ${IMAGE_NAME}:${BUILD_NUMBER}"
                        }
                    }
                }
            }
            
        }
    }
}
